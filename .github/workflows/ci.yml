name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main", "staging", "production"]
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/staging' && github.ref != 'refs/heads/production' }}

# Required permissions for commenting on PRs
permissions:
  contents: read
  pull-requests: write

# Can consider leveraging Vercel Remote Caching with Turbo to speed up your builds
# @link https://turborepo.org/docs/core-concepts/remote-caching#remote-caching-on-vercel-builds
env:
  FORCE_COLOR: 3=

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
          
      - name: Install dependencies
        run: pnpm install

      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

  lint_and_format:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
          
      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: 1.9.4
      - name: Run Biome
        run: biome ci .
        
  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Action
        id: test-action
        uses: ./
        env:
          PLAYMATIC_API_URL: "https://app.playmatic.ai/api/v1/trigger-test"
        with:
          api-key: ${{ secrets.PLAYMATIC_API_KEY }}
          test-url: https://playmatic.ai

      - name: Print Output
        id: output
        run: echo "${{ steps.test-action.outputs.playtest-link }}"
      